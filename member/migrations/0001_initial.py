# Generated by Django 4.2.2 on 2023-06-12 06:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('institutions', '0001_initial'),
        ('glug', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Members',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('Man', 'Man'), ('Woman', 'Woman'), ('Trans', 'Trans'), ('Queer', 'Queer'), ('Other', 'Other')], max_length=10, verbose_name='Gender')),
                ('zip_code', models.CharField(default='+91', max_length=5)),
                ('contact', models.IntegerField()),
                ('contact_full', models.CharField(max_length=15)),
                ('blood_group', models.CharField(choices=[('O+ve', 'Op'), ('O-ve', 'On'), ('A+ve', 'Ap'), ('A-ve', 'An'), ('B+ve', 'Bp'), ('B-ve', 'Bn'), ('AB+ve', 'Abp'), ('AB-ve', 'Abn')], max_length=10)),
                ('address', models.TextField()),
                ('display_pic', models.ImageField(default='default/user.png', upload_to='users/display_pics/')),
                ('occupation', models.CharField(choices=[('School Student', 'S Student'), ('College/University Student', 'C Student'), ('Researcher', 'Researcher'), ('IT Employee', 'It Employee'), ('ITES Employee', 'Ites Employee'), ('Non IT/ITES Employee', 'Non It Ites Employee'), ('Self Employed', 'Self Employed'), ('Unemployed', 'Unemployed')], max_length=30)),
                ('edu_qualification', models.CharField(choices=[('8th Pass', 'Eighth Pass'), ('10th Pass', 'Tenth Pass'), ('12th Pass', 'Twelveth Pass'), ('Diploma', 'Diploma'), ('Under Graduate', 'Under Graduate'), ('Post Graduate', 'Post Graduate'), ('Doctorate', 'Doctorate')], max_length=30)),
                ('stream', models.CharField(max_length=256)),
                ('glug', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='glug.glug', verbose_name='GLUG')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='institutions.institutions', verbose_name='Institution')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
                'ordering': ['-date_joined', 'first_name', 'username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProofOfPayment',
            fields=[
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.BigIntegerField()),
                ('document', models.FileField(upload_to='users/payments/%Y/%m/%d/')),
                ('is_verified', models.BooleanField(choices=[(0, 'Not Verified'), (1, 'Verified')], default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_by', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proof of payment',
                'verbose_name_plural': 'Proof of Payments',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, null=True)),
                ('start_date', models.DateField(auto_created=True, auto_now_add=True)),
                ('year', models.DateField(auto_created=True, auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('join_date', models.DateField()),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('upi', 'UPI Payment'), ('bank', 'Net Banking')], max_length=30)),
                ('payment_received', models.IntegerField()),
                ('payment_pending', models.IntegerField()),
                ('status', models.BooleanField(choices=[(0, 'Expried/Invalid'), (1, 'Valid')])),
                ('expiry_date', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('proof_of_payment', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='member.proofofpayment')),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Memberships',
                'ordering': ['-year', 'member'],
            },
        ),
    ]
