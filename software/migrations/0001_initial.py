# Generated by Django 4.2.6 on 2023-10-12 18:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_created=True, auto_now_add=True, null=True
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_created=True, auto_now_add=True, null=True
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "url_source",
                    models.URLField(blank=True, null=True, verbose_name="License URL"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "License",
                "verbose_name_plural": "Licenses",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_created=True, auto_now_add=True, null=True
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Software",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_created=True, auto_now_add=True, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Software name", max_length=50, verbose_name="Name"
                    ),
                ),
                (
                    "url_wikipedia",
                    models.URLField(
                        blank=True, null=True, verbose_name="Wikipedia URL"
                    ),
                ),
                (
                    "page_home",
                    models.URLField(blank=True, null=True, verbose_name="Homepage"),
                ),
                (
                    "is_foss",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Is FOSS"), (False, "Is not FOSS")],
                        null=True,
                        verbose_name="is FOSS",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "alternatives",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="software.software",
                        verbose_name="Alternative Softwares",
                    ),
                ),
                (
                    "category",
                    models.ManyToManyField(
                        to="software.category", verbose_name="Categories"
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="software.license",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(to="software.tag", verbose_name="Tags"),
                ),
            ],
            options={
                "verbose_name": "Software",
                "verbose_name_plural": "Softwares",
                "ordering": ["-updated_at"],
            },
        ),
    ]
